@{
    ViewData["Title"] = "Home Page";
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<p>
    @* <asp:Label runat="server" ID="ShowDate"></asp:Label> *@
</p>

<div style="position: absolute; top:5%; left: 50%; transform: translateX(-50%); border-radius: 10px; width:80%; height: 20%; padding: 10px; color: white; font-size: 30px;overflow: hidden;
              background: #9152f8;
              background: -webkit-linear-gradient(top, #7579ff, #b224ef);
              background: -o-linear-gradient(top, #7579ff, #b224ef);
              background: -moz-linear-gradient(top, #7579ff, #b224ef);
              background: linear-gradient(top, #7579ff, #b224ef);">
    <div style=" padding: 30px; left: 50%;">
        Hello, @ViewBag.name!<br />
        <span style="color: white;">@DateTime.Now.ToString("dddd")</span>
    </div>

    <div style="position: absolute; top: 50%; right: 20px; transform: translateY(-50%);padding: 30px;">
        <span id="currentTime" style="color: white;"></span>
    </div>
</div>

<div style="position: absolute; top:35%; left: 20%; transform: translateX(-50%); border-radius: 10px; width:20%; height: 15%; padding: 10px; color: white; font-size: 30px;
            background: #9152f8;
              background: -webkit-linear-gradient(top, #7579ff, #b224ef);
              background: -o-linear-gradient(top, #7579ff, #b224ef);
              background: -moz-linear-gradient(top, #7579ff, #b224ef);
              background: linear-gradient(top, #7579ff, #b224ef);">
          <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                   @ViewBag.DepartmentName Department
               </div>
          </div>

<div style="position: absolute; top:55%; left: 20%; transform: translateX(-50%); border-radius: 10px; width:20%; height:  15%; padding: 10px; color: white; font-size: 30px;
            background: #9152f8;
              background: -webkit-linear-gradient(top, #7579ff, #b224ef);
              background: -o-linear-gradient(top, #7579ff, #b224ef);
              background: -moz-linear-gradient(top, #7579ff, #b224ef);
              background: linear-gradient(top, #7579ff, #b224ef);"></div>

<div id="taskDataContainer" style=" position: absolute; top:35%; left:82%; transform: translateX(-50%); border-radius: 10px; width:15%; height: 35%; padding: 10px; color: white; font-size: 25px;
            background: #9152f8;
              background: -webkit-linear-gradient(top, #7579ff, #b224ef);
              background: -o-linear-gradient(top, #7579ff, #b224ef);
              background: -moz-linear-gradient(top, #7579ff, #b224ef);
              background: linear-gradient(top, #7579ff, #b224ef);
                justify-content: center;align-items: center;">

    @section scripts {
        <script>
            $(document).ready(function () {
                $.ajax({
                    url: '@Url.Action("TData", "Home")',
                    method: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        var taskTitles = data[0];
                        var statuses = data[1];

                        var container = $('#taskDataContainer');
                        for (var i = 0; i < taskTitles.length; i++) {
                            var div = $('<br/><div></div>').addClass('task-item');
                            div.append('<span>' + taskTitles[i] + '</span>');
                            var statusSpan = $('<span>' + statuses[i] + '</span>');
                            if (statuses[i] === "Completed") {
                                statusSpan.addClass('completed');
                            } else if (statuses[i] === "Declined") {
                                statusSpan.addClass('declined');
                            }
                            div.append(statusSpan);
                            container.append(div);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error: ' + error);
                    }
                });
            });
        </script>
    }
</div>
<style>
    .task-item {
        display: flex;
        justify-content: center;
        margin-bottom: 10px; /* Adjust spacing between items */
    }

        .task-item span {
            margin: 0 5px; /* Adjust spacing between title and status */
        }

    .completed {
        color: green; /* Set text color to green for Completed status */
    }

    .declined {
        color: red; /* Set text color to red for Declined status */
    }
</style>
<div style="position: absolute; top:35%; right: 60px; left:35%; width:35%; height:35%;  border-radius: 10px;padding: 25px;
            background: #9152f8;
              background: -webkit-linear-gradient(top, #7579ff, #b224ef);
              background: -o-linear-gradient(top, #7579ff, #b224ef);
              background: -moz-linear-gradient(top, #7579ff, #b224ef);
              background: linear-gradient(top, #7579ff, #b224ef);">
    <canvas id="myChart" style="max-width:800px;max-height:500px; border-radius: 10px; left:50%; top:50%;"></canvas>
</div>

<br />
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

<script type="text/javascript">

    $(function () {
        function getCurrentTime() {
            var currentTime = new Date();
            var hours = currentTime.getHours();
            var minutes = currentTime.getMinutes();
            var ampm = hours >= 12 ? 'PM' : 'AM';
            hours = hours % 12;
            hours = hours ? hours : 12;
            minutes = minutes < 10 ? '0' + minutes : minutes;
            var timeString = hours + ':' + minutes + ' ' + ampm;
            return timeString;
        }

        function updateCurrentTime() {
            var currentTimeElement = document.getElementById("currentTime");
            if (currentTimeElement) {
                currentTimeElement.innerText = getCurrentTime();
            }
        }

        setInterval(updateCurrentTime, 1000);

        $.ajax({
            type: "POST",
            url: "/Home/GetData",
            data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: OnSuccessResult,
            error: OnError
        });

        function OnSuccessResult(data) {
            var _data = data;
            var _chartLabels = _data[0];
            var _StartData = _data[1];
            var _DeadData = _data[2];

            var barColor = ["red", "blue", "green", "yellow", "orange", "purple", "pink", "brown", "grey", "black"];

            new Chart("myChart", {
                type: "bar",
                data: {
                    labels: _chartLabels,
                    datasets: [{
                        label: "Tasks",
                        data: [_StartData, _DeadData],
                        backgroundColor: barColor,
                        borderWidth: 1,
                        borderRadius: 4,
                        borderSkipped: false
                    }]
                },
                options: {
                   
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        position: 'top',
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: 'white' // Set the color of the y-axis labels to white
                            }
                        },
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day',
                            },
                            ticks: {
                                color: 'white' // Set the color of the y-axis labels to white
                            },
                            position: 'top'
                        }
                    },
                    plugins: {
                        annotation: {
                            annotations: [{
                                type: 'line',
                                mode: 'vertical',
                                scaleID: 'x',
                                value: new Date(_StartData),
                                borderColor: 'rgba(255, 0, 0, 0.5)',
                                borderWidth: 2,
                                label: {
                                    content: 'Start Date',
                                    enabled: true,
                                    position: 'top'
                                }
                            }, {
                                type: 'line',
                                mode: 'vertical',
                                scaleID: 'x',
                                value: new Date(_DeadData),
                                borderColor: 'rgba(0, 0, 255, 0.5)',
                                borderWidth: 2,
                                label: {
                                    content: 'Deadline',
                                    enabled: true,
                                    position: 'top'
                                }
                            }]
                        }
                    }
                }
            });

           
        }

        function OnError(err) {
            console.log(err);
        }
    });
</script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { packages: ['timeline'] }); // Load the timeline package

    google.charts.setOnLoadCallback(initialize); // Set callback to initialize function

    function initialize() {
        var opts = { sendMethod: 'auto' };
        // Replace the data source URL on next line with your data source URL.
        var query = new google.visualization.Query('Data Source=SQL6031.site4now.net;Initial Catalog=db_aa7de3_t10;User Id=db_aa7de3_t10_admin;Password=A$d12345', opts);

        // Optional request to return only column C and the sum of column B, grouped by C members.
        query.setQuery('select CreatedBy, MONTH(CreatedDate) as Month, COUNT(*) as TaskCount from STask group by CreatedBy, MONTH(CreatedDate)');

        // Send the query with a callback function.
        query.send(handleQueryResponse);
    }

    function handleQueryResponse(response) {
        if (response.isError()) {
            alert('Error in query: ' + response.getMessage() + ' ' + response.getDetailedMessage());
            return;
        }

        var container = document.getElementById('example2');
        var chart = new google.visualization.Timeline(container);
        var dataTable = new google.visualization.DataTable();

        dataTable.addColumn({ type: 'string', id: 'Term' });
        dataTable.addColumn({ type: 'string', id: 'Name' });
        dataTable.addColumn({ type: 'date', id: 'Start' });
        dataTable.addColumn({ type: 'date', id: 'End' });

        // Replace this part with your data query response
        var queryResponseData = response.getDataTable();

        // Add rows from the query response data
        dataTable.addRows(queryResponseData);

        chart.draw(dataTable);
    }
</script>
