@model DemoWE.Models.Project

@{
    ViewData["Title"] = "Details";
}


<div class="card-header">
    <h2 class="card-title mb-0"> Project : @Html.DisplayFor(model => model.ProjectTitle)</h2>
    <h4> Project descrptition: @Html.DisplayFor(model => model.ProjectDescription)</h4>
</div>
 </br>
<p>
    <!-- Link to trigger modal removed -->
    <button id="createButton" class="btn btn-primary">Create Project Task</button>
</p>
@* <div class="container-fluid">



    <div class="row">
        <div class="col-md-6 offset-md-7">
            <div class="card mb-4">
                
                <div class="card-body">
                    <p>@Html.DisplayFor(model => model.ProjectDescription)</p>
                    <dl class="row">
                        <div class="col-sm-6">
                            <dt>Status</dt>
                            <dd>@Html.DisplayFor(model => model.Status)</dd>
                            <dt>StartDate</dt>
                            <dd>@Html.DisplayFor(model => model.StartDate)</dd>
                            <dt>Deadline</dt>
                            <dd>@Html.DisplayFor(model => model.Deadline)</dd>
                        </div>
                        <div class="col-sm-6">
                          
                            <dt>AssignedDepartmentID</dt>
                            <dd>@Html.DisplayFor(model => model.AssignedDepartmentID)</dd>
                            <dt>Priority</dt>
                            <dd>@Html.DisplayFor(model => model.Priority)</dd>

                        </div>
                    

                        <div class="col-sm-6" id="checkboxSection">
                            <dt>Checkboxes</dt>
                            <dd id="checkboxList">
                                <!-- Existing checkboxes will be added here -->
                            </dd>
                            <button onclick="addCheckbox()">Add Checkbox</button>
                        </div>
</dl>
</div>
</div>
</div>
</div>
</div> *@



   


<!-- CreateModal content -->
<div class="row">
    <div class="col-md-4">
        <div id="createModal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Create Task</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Partial view for Create Task form -->
                        @await Html.PartialAsync("~/Views/Projects/ProjectTask/TaskPartial.cshtml", new DemoWE.Models.STask())) <!-- Pass an empty STask object -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="card mt-4">
    <div class="card-header">
        Checkboxes
    </div>
</div>

<div class="card-footer">
    <a asp-action="Edit" asp-route-id="@Model?.ProjectID" class="btn btn-primary float-right">Edit</a>
    
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>



<script>
    // Counter to keep track of checkbox IDs
    let checkboxCounter = 1;

    // Function to add a new checkbox
    function addCheckbox() {
        const checkboxName = prompt("Enter checkbox name:");
        if (checkboxName) {
            const checkboxId = `checkbox_${checkboxCounter++}`;
            const checkboxHtml = `
                        <div>
                            <input type="checkbox" id="${checkboxId}" name="checkboxes" value="${checkboxName}">
                            <label for="${checkboxId}">${checkboxName}</label>
                            <button onclick="deleteCheckbox('${checkboxId}')">Delete</button>
                        </div>
                    `;
            document.getElementById("checkboxList").innerHTML += checkboxHtml;
        }
    }

    // Function to delete a checkbox
    function deleteCheckbox(checkboxId) {
        const checkboxElement = document.getElementById(checkboxId);
        if (checkboxElement) {
            checkboxElement.parentElement.remove();
        }
    }
</script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }

        <script>
            $(document).ready(function () {
                // Event handler for showing the modal
                $('#createButton').on('click', function () {
                    $('#createModal').modal('show');
                });

                // Event handler for form submission
                $(document).on('submit', '#createForm', function (e) {
                    e.preventDefault();
                    // Ajax request for form submission
                    $.ajax({
                        url: '/STasks/Create',
                        type: 'post',
                        data: $(this).serialize(),
                        success: function (data) {
                            $('#createModal').modal('hide');
                            location.reload(); // Refresh the page, you can update UI as needed
                        },
                        error: function () {
                            // Handle error
                        }
                    });
                });
            });
        </script>
    }
