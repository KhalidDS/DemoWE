@model IEnumerable<DemoWE.Models.STask>

@{
    ViewData["Title"] = "Index";
}

<head>

  
    <link rel="stylesheet"href="/css/table.css" />
 
 
</head>

<style>
    .btn {
        background-color: #D8D8D8;
        border: none;
        color: black;
        padding: 12px 12px;
        text-align: center;
        font-size: 11px;
        margin: 1px 1px;
        opacity: 0.6;
        transition: 0.3s;
        width: 100px;
        
    }
        .btn:hover {
            opacity: 1
            
        }

    .past-deadline {
        color: red;
    }

    .confirm {
        color:  limegreen;
    }

    .complete {
        color: blue;
    }
</style>

<p>
    <!-- Link to trigger modal removed -->
   @*  @if (ViewBag.Role == 2)
    { *@
       

    @* }  *@
</p>



<table>
    <thead>
        <tr>
            <th>Task Title)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.StartDate)</th>
            <th>@Html.DisplayNameFor(model => model.Deadline)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
            <th>@Html.DisplayNameFor(model => model.AssignedTo)</th>
            <th>@Html.DisplayNameFor(model => model.Priority)</th>
            <th>Project</th>
            <th> <button id="createButton" class="btn" style="font-size: 15px;">Create</button></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.TaskTitle)</td>
                @if (item.Status == Status.Confirm)
                {
                    <td class="confirm">@item.Status</td>
                }
                else if (item.Status == Status.Completed)
                {
                    <td class="complete">@item.Status</td>
                }
                else if (item.Status == Status.Declined)
                {
                    <td class="past-deadline">@item.Status</td>
                }
                else
                {
                    <td>@item.Status</td>
                }
                <td>@item.StartDate.ToShortDateString()</td>
                @if (item.Deadline < DateTime.Now && item.Status != Status.Completed)
                {
                    <td class="past-deadline">@item.Deadline.ToShortDateString()</td>
                }
                else
                {
                    <td>@item.Deadline.ToShortDateString()</td>
                }
                @foreach (User t in ViewBag.At)
                {
                    if (t.EmployeeNumber == item.CreatedBy)
                    {
                        <td>@t.FirstName</td>
                    }
                }
                @foreach (User t in ViewBag.At)
                {
                    if (t.EmployeeNumber == item.AssignedTo)
                    {
                        <td>@t.FirstName</td>
                    }
                }
            
                <td>@Html.DisplayFor(modelItem => item.Priority)</td>

                @foreach (Project p in ViewBag.p)
                {
                    if (p.ProjectID == item.project_id)
                    {
                        <td>@p.ProjectTitle</td>
                    }
                }
  
                    <td>
                       
                    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                        <div class="btn-group" role="group">
                            <button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Option</button>
                            <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                @if (ViewBag.Role != 1 || item.CreatedBy == ViewBag.userid)
                                {
                                    <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.TaskID">Edit</a>

                                }
                                <a class="dropdown-item" asp-action="Details" asp-route-id="@item.TaskID">Details</a>

                            </div>
                        </div>
                    </div>
               </td>

   
            </tr>
        }
    </tbody>
</table>

<!-- CreateModal content -->
<div class="row">
    <div class="col-md-4">
        <div id="createModal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Create Task</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Partial view for Create Task form -->
                        @await Html.PartialAsync("_CreatePartial", new STask()) <!-- Pass an empty STask object -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Section for scripts -->
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        $(document).ready(function () {
            // Event handler for showing the modal
            $('#createButton').on('click', function () {
                $('#createModal').modal('show');
            });

            // Event handler for form submission
            $(document).on('submit', '#createForm', function (e) {
                e.preventDefault();
                // Ajax request for form submission
                $.ajax({
                    url: '/STasks/Create',
                    type: 'post',
                    data: $(this).serialize(),
                    success: function (data) {
                        $('#createModal').modal('hide');
                        location.reload(); // Refresh the page, you can update UI as needed
                    },
                    error: function () {
                        // Handle error
                    }
                });
            });
        });
    </script>
}
